version: 2
dependencies:
  cache_directories:
    - "vendor/apt"
jobs:
  build:
    docker:
      - image: adoptopenjdk/openjdk8:jdk8u152-b16
    steps:
      - checkout
      - restore_cache:
          keys:
            - os-deps-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - os-deps-{{ arch }}-{{ .Branch }}
            - os-deps
      - run:
          name: Install Os dependencies
          command: ./build/x86_64/linux_macos/osDependencies.sh
          timeout: 2m
      - save_cache:
          key: os-deps-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - vendor/apt
      - restore_cache:
          keys:
            - make-382-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - make-382-{{ arch }}-{{ .Branch }}
            - make-382
      - run:
          name: Build and install make via script
          command: ./build/x86_64/linux_macos/installMake.sh
          timeout: 1m
      - save_cache:
          key: make-382-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /root/project/make-3.82/
      - run:
          name: Define Environment Variables and update JAVA_HOME and PATH at Runtime
          command: |
            echo 'export JAVA_VERSION=jdk8u144-b01'                               >> ${BASH_ENV}
            echo 'export JAVA_HOME=/opt/java/openjdk/${JAVA_VERSION}'             >> ${BASH_ENV}
            echo 'export PATH=${JAVA_HOME}/bin:${PATH}'                           >> ${BASH_ENV}
            echo 'export BASEDIR=$(pwd)'                                          >> ${BASH_ENV}
            echo 'export MX=${BASEDIR}/mx/mx'                                     >> ${BASH_ENV}
            echo 'export JDK_GRAAL_FOLDER_NAME=jdk8-with-graal'                   >> ${BASH_ENV}
            echo 'export BUILD_ARTIFACTS_DIR=${BASEDIR}/${JDK_GRAAL_FOLDER_NAME}' >> ${BASH_ENV}
            echo 'export RUN_TESTS=""'                                            >> ${BASH_ENV}
            source ${BASH_ENV}
      - run:
          name: Display versions of dependencies
          command: ./build/x86_64/linux_macos/lib/displayDependencyVersion.sh
      - restore_cache:
          keys:
            - graal-build-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
            - graal-build-{{ arch }}-{{ .Branch }}
            - graal-build
      - run:
          name: Setup MX
          command: ./build/x86_64/linux_macos/lib/setupMX ${BASEDIR}
      - run:
          name: Build JDK JVMCI
          command: ./build/x86_64/linux_macos/lib/build_JDK_JVMCI.sh ${BASEDIR} ${MX}
      - run:
          name: Run JDK JVMCI Tests
          command: ./build/x86_64/linux_macos/lib/run_JDK_JVMCI_Tests.sh ${BASEDIR} ${MX}
      - run:
          name: Set env variables
          command: ./build/x86_64/linux_macos/lib/setupEnvVariables.sh ${BASEDIR}
      - run:
          name: Build Graal Compiler
          command: ./build/x86_64/linux_macos/lib/buildGraalCompiler.sh ${BASEDIR} ${MX} ${BUILD_ARTIFACTS_DIR}
      - save_cache:
          key: graal-build-{{ arch }}-{{ .Branch }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - /root/project/graal
            - /root/project/graal-jvmci-8
            - /root/project/jdk8-with-graal
            - /root/project/mx
      - run:
          name: Archiving artifacts
          command: ./build/x86_64/linux_macos/lib/archivingArtifacts.sh ${JDK_GRAAL_FOLDER_NAME} ${BUILD_ARTIFACTS_DIR}

